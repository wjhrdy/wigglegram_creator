name: Build Binaries

on:
  push:
    tags:
      - 'v*' # Only build on version tag pushes

jobs:
  createrelease:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Output Release URL File
        run: echo "${{ steps.create_release.outputs.upload_url }}" > release_url.txt
      - name: Save Release URL File for publish
        uses: actions/upload-artifact@v1
        with:
          name: release_url
          path: release_url.txt

  build:
    name: Build packages
    needs: createrelease
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: macos-latest
            arch: x64
            TARGET: macos
            CMD_BUILD: >
                pip install pyinstaller && \
                pyinstaller --windowed --name "WigglegramCreator-x64" --icon=icons/icon-512.png create_wiggle.py && \
                cd dist/ && \
                zip -r9 WigglegramCreator-x64 WigglegramCreator-x64.app/
            OUT_FILE_NAME: WigglegramCreator-x64.zip
            ASSET_MIME: application/zip
          - os: macos-latest
            arch: arm64
            TARGET: macos
            CMD_BUILD: >
                pip install pyinstaller && \
                pyinstaller --windowed --name "WigglegramCreator-arm64" --icon=icons/icon-512.png create_wiggle.py && \
                cd dist/ && \
                zip -r9 WigglegramCreator-arm64 WigglegramCreator-arm64.app/
            OUT_FILE_NAME: WigglegramCreator-arm64.zip
            ASSET_MIME: application/zip
          - os: windows-latest
            arch: x64
            TARGET: windows
            CMD_BUILD: pip install pyinstaller && pyinstaller --noconsole --onefile --icon=icons/icon_512_tIf_icon.ico create_wiggle.py
            OUT_FILE_NAME: create_wiggle.exe
            ASSET_MIME: application/vnd.microsoft.portable-executable
          - os: ubuntu-latest
            arch: x64
            TARGET: linux
            CMD_BUILD: pip install pyinstaller && pyinstaller --noconsole --onefile --icon=icons/icon-512.png create_wiggle.py
            OUT_FILE_NAME: create_wiggle
            ASSET_MIME: application/octet-stream
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Install uv (all platforms)
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          uv pip install -r requirements.txt --system
      - name: Build with PyInstaller for ${{ matrix.TARGET }}
        run: ${{ matrix.CMD_BUILD }}
      - name: Load Release URL File from release job
        uses: actions/download-artifact@v1
        with:
          name: release_url
      - name: Get Release File Name & Upload URL
        id: get_release_info
        shell: bash
        run: |
          value=`cat release_url/release_url.txt`
          echo ::set-output name=upload_url::$value
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_release_info.outputs.upload_url }}
          asset_path: ./dist/${{ matrix.OUT_FILE_NAME }}
          asset_name: ${{ matrix.OUT_FILE_NAME }}
          asset_content_type: ${{ matrix.ASSET_MIME }}
